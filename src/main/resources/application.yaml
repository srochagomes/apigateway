server:
  port: ${PORT:8885}

auth-base-api: ${AUTH_BASE_ADDRESS:localhost:8887}
account-api: ${ACCOUNT_ADDRESS:localhost:8888}

keycloak-detail: /realms/eselwer/.well-known/openid-configuration

identity-provider:
  address: ${KEYCLOAK_ADDRESS:192.168.39.186:30800}
  helm: ${KEYCLOAK_HELM:eselwer}

management:
  health:
    livenessstate:
      enabled: true
    readinessstate:
      enabled: true
  endpoints:
    web:
      exposure:
        include: '*'
      base-path: /_app-state
  endpoint:
    health:
      show-details: always
      probes:
        add-additional-paths: true
        enabled: true

spring:
  application:
    name: apigateway
  jmx:
    enabled: false
  jackson:
    default-property-inclusion: non_null
  profiles:
    active: ${PROFILE:dev}

  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: http://${identity-provider.address}/realms/${identity-provider.helm}
          jwk-set-uri: http://${identity-provider.address}/realms/${identity-provider.helm}/protocol/openid-connect/certs

  cloud:
    gateway:
      metrics:
        enabled: true
      httpserver:
        wiretap: true
      httpclient:
        wiretap: true

      globalcors:
        cors-configurations:
          '[/**]':
            allowCredentials: true
            allowedOrigins: ${GATEWAY_ALLOW_ORING:"http://localhost:4200, http://localhost:3000"}
            allowedHeaders: "*"
            allowedMethods:
              - GET
              - POST
              - PUT
              - DELETE
              - PATCH
      routes:
        - id: token-service
          uri: http://${auth-base-api}
          order: 1
          predicates:
            - Path=/authentication/v1/identifications/{action}
          filters:
            - PreserveHostHeader
            - SaveSession
            - SetPath=/authbase/{action}

        - id: session-service
          uri: http://${auth-base-api}
          order: 2
          predicates:
            - Path=/authentication/v1/sessions
          filters:
            - PreserveHostHeader
            - SaveSession
            - SetPath=/authbase/sessions


        - id: account-api
          uri: http://${account-api}
          order: 3
          predicates:
            - Path=/manager/v1/accounts/**
          filters:
            - PreserveHostHeader
            - SaveSession
            - SetPath=/accounts


apigateway:
  security:
    configs:
      pathMatchers:
        - method: GET
          urlPattern: "/_app-state/health"
          permitAll: true
        -
          urlPattern: '/authentication/v1/identifications/**'
          permitAll: true

        - method: OPTIONS
          urlPattern: "/**"
          permitAll: true

        -
          urlPattern: "/authentication/v1/sessions"
          roles:
            - uma_protection
            - role-apigateway
            - uma_authorization
            - "ADM DO SISTEMA"

        -
          urlPattern: "/manager/**"
          roles:
            - uma_protection
            - role-apigateway
            - uma_authorization
            - "ADM DO SISTEMA"
      anyExchange:
        roles:
          - role_user_poc
log:
  level: ${LOG_LEVEL:INFO}

logging:
  level:
    root: ${log.level}
    org:
      springframework: ${log.level}
    br:
      com:
        rd: ${log.level}
    com:
      rd: ${log.level}

